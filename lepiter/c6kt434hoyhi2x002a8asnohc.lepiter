{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:05:54.691554-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:40:13.764212-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4EdSAAv5DQCOtrtKB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Software Bills of Materials (SBOM) are something I rarely think about actively. They’re useful, yes, but for most projects I just make it part of my CI/CD pipeline (mostly because it’s in my templates) along with some sanity checks, and forget about it."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:07:14.218125-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:40:48.077375-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GXLIBQv5DQCT5eWyB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This year, however, is different. I’ve been living through this weird phase of [frequency illusion](https://en.wikipedia.org/wiki/Frequency_illusion) where the topic seems to come up in every project I touch. A lot of the due diligence (DD) projects I’ve been involved this year have had some major or minor hiccups related to them, and I have to think about them in my role as Security Consultant for the [CIVITAS/Core project](https://docs.core.civitasconnect.digital/), so I decided to document some best practices and fundamentals while they’re fresh in my mind."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:10:21.034275-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:10:30.663867-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cwnrEAv5DQCef4fbB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## When are SBOMs useful?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:10:32.049034-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:12:39.763787-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oBuTEQv5DQCfChFaB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "SBOMs are rarely useful day-to-day, even though they provide a comprehensive insight into your dependency chain. But truth be told, if you don’t have any automated checks in place, you likely won’t derive any personal value from having one."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:12:47.419633-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:40:54.85351-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "NbKkGQv5DQCkaO9SB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "All is not lost, however. Many code hosting platforms have some built in facilities for working with SBOMs. [GitLab, for instance, has some dependency scanning capabilities](https://docs.gitlab.com/user/application_security/dependency_scanning/), including helping you find vulnerabilities in your dependencies. [GitHub can even generate SBOMs for you](https://github.blog/enterprise-software/governance-and-compliance/introducing-self-service-sboms/). You should probably invest some time into finding out what’s there for your platform if you want to get the most out of them for you and your project. At the very least it can help you perform a license check every once in a while to help you sleep at night."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:16:28.732973-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:41:08.468667-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SKvVJgv5DQCuAnqaB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Apart from that, though, it’s also often required for compliance reasons, and is often asked for in DD processes (for instance by yours truly). It’s just good to have them at hand when someone asks for them, even if you don’t really use them yourself (even though you really should)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:17:41.862659-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:41:22.832429-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "l4cxKwv5DQC0FK0iB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "And no, it’s probably not a good idea to produce this list manually, or to jumble something together ad-hoc when someone asks for it. They will be able to tell, and your list will probably be incomplete. It’s neither useful nor a good look."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:19:22.967787-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:20:27.627897-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/zw4MQv5DQC8EFBhB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Some best practices"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:20:28.226712-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:41:35.556806-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2A4cNQv5DQC9Di13B+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "SBOMs are usually pretty straightforward, but there are some general rules I usually abide by when dealing with them."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:21:10.288928-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:22:55.086431-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jN+dNwv5DQCAyCgDB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Firstly, there are two major formats for them: [CycloneDX](https://cyclonedx.org/) and [SPDX](https://spdx.dev/). I personally prefer CycloneDX, but you likely don’t have to care. Pick the one that has better support across your ecosystems and stay consistent."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:22:55.866692-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:42:24.250801-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qd3oPQv5DQCGHB7UB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "What should be included? While this depends on the project, I’d say by default only what makes it to production. If you have build and test dependencies, you can include them with a special flag, but it likely will only produce unwanted noise and be a nuisance (which will lower the value provided by the tool). If you ship containers or infrastructure, include the base images and their package lists as well. That will ensure that you get nudged when it’s time to update."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:24:46.799955-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:27:44.944184-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "HZKFRAv5DQCPU6BAB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Finally, you’ll probably run into [Vulnerability Exploitability eXchange (VEX)](https://cyclonedx.org/capabilities/vex/) sooner or later. You’ll first use it to squash those CVEs that are somewhere in your infrastructure, but definitely not exploitable. In an ideal world, they wouldn’t be there, but you made sure they’re not an issue. VEX helps you mark them."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:27:46.698925-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:43:05.779719-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wJw+Twv5DQCXrmclB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "There are other things you can think about when you are really truly bored, like [serial numbers, Package URLs (purls)](https://cyclonedx.org/docs/1.6/xml/), [SLSA provenance attestations](https://slsa.dev/spec/v1.0/provenance), general signatures and [in-toto attestations](https://docs.sigstore.dev/cosign/verifying/attestation/) in particular, and many more things, but I’d hope that your tool of choice does most of this for you and ships defaults that let you sleep at night. I certainly don’t want to have to think about any of it."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:30:55.129599-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:32:01.58139-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wtV5Wgv5DQCgGLYhB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you do sign, though, make sure I can verify the signatures, please and thank you."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:32:43.74498-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:32:50.892462-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hSvzYAv5DQCh1AcHB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "### Minimum checklist"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:32:55.821328-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:47:45.321688-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mLdxYQv5DQCiX7DwB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "To keep it brief and actionable, here’s a minimum I would expect you to have if you provide a SBOM at all, both as a security person and as part of the documentation provided during a DD or audit:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:33:21.200163-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:52:23.819874-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "g64uYwv5DQCkttv5B+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "1. It gets autogenerated as part of your CI/CD, or is at least reproducible. It matches the reality of your system and captures all of its parts that reach production.\n2. If you track vulnerabilities, you track which ones are relevant using VEX (and why) and do not expect me to wade through a massive backlog of issues manually every time.\n3. I can diff it somehow. Either the format you produce is inherently diffable and I can use a tool of choice, or your provider (code hosting or CI/CD) automatically tracks diffs somehow.\n4. If you sign any parts of it (you probably should), make sure that I can verify the signature."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:36:36.90916-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:54:03.044605-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "VvnYbgv5DQC0gdedB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "And really, that’s all there is to it. Sure, you can go fancy with it if you’d like, but in my opinion most of the value is captured here."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:54:03.347311-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:54:07.279302-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nlg4rQv5DQCCKjGDB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "### Example"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:54:07.520054-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:43:20.525361-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iwZ4rQv5DQCCb0vEB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I said above that how you set things up will depend on your technologies, ecosystems, and platforms, but I don’t like to keep things fully theoretical, so I thought I’d provide at least one minimal example."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:55:19.631717-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:59:43.244567-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SMmMsQv5DQCHpZFhB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let’s say you run a web application using Django/Python on the backend, React/TS on the frontend, and you use Gitlab for code hosting and CI/CD. You have a monorepo and the code lives in the `frontend` and `backend` directories, respectively. A simple addition to your `.gitlab-ci.yml` would be:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:56:41.891107-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:00:02.402117-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "84ertgv5DQCMQJrwB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```\nstages:\n  - sbom\n\nsbom_backend:\n  stage: sbom\n  image: python:3.12-slim\n  before_script:\n    - python -m pip install --upgrade pip\n    - pip install pip-audit\n  script:\n    # Generate CycloneDX SBOM from locked requirements (no app execution)\n    - pip-audit -r backend/requirements.txt -f cyclonedx -o gl-sbom-backend.cdx.json\n  artifacts:\n    reports:\n      cyclonedx: gl-sbom-backend.cdx.json\n    paths:\n      - gl-sbom-backend.cdx.json\n    when: always\n    expire_in: 1 week\n\nsbom_frontend:\n  stage: sbom\n  image: node:20-alpine\n  before_script:\n    - cd frontend\n    - npm ci --omit=dev\n  script:\n    # Generate CycloneDX SBOM from npm metadata (prod deps only)\n    - npx @cyclonedx/cyclonedx-npm --omit dev --output-format json --output-file ../gl-sbom-frontend.cdx.json\n  artifacts:\n    reports:\n      cyclonedx: gl-sbom-frontend.cdx.json\n    paths:\n      - gl-sbom-frontend.cdx.json\n    when: always\n    expire_in: 1 week\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:00:11.096186-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:00:49.913781-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Jr4jwwv5DQCOyWTbB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can then also add validation, like so:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:00:52.955146-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:01:11.046222-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KnmixQv5DQCPvROeB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```\nsbom_validate:\n  stage: sbom\n  image: cyclonedx/cyclonedx-cli:latest\n  needs: [\"sbom_backend\", \"sbom_frontend\"]\n  script:\n    - cyclonedx validate --input-file gl-sbom-backend.cdx.json --input-format json\n    - cyclonedx validate --input-file gl-sbom-frontend.cdx.json --input-format json\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:01:11.349417-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:02:07.847134-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PCW7xgv5DQCQKibIB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "And if you want to include your containers as well, you can add a step using `syft`:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:02:12.569948-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:02:31.420246-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Ukphygv5DQCSCUQZB+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "```\nsbom_image:\n  stage: sbom\n  image: anchore/syft:latest\n  script:\n    - syft <your-image>:tag -o cyclonedx-json > gl-sbom-image.cdx.json\n  artifacts:\n    reports:\n      cyclonedx: gl-sbom-image.cdx.json\n    paths:\n      - gl-sbom-image.cdx.json\n```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:02:46.069561-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T16:03:56.922194-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OKfuywv5DQCSZ5I2B+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "It’s a non-negligible amount of YAML, but it’s pretty trivial, and by setting `artifacts` above, you will also be able to use GitLab’s security reports and general SBOM UI."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:37:20.389851-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:37:21.997972-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cXBwcQv5DQC4lYT5B+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Fin"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-18T15:37:23.505501-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-21T02:43:30.749854-06:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kfufcQv5DQC4t0d6B+THzQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I really don’t know how I ended up here. SBOMs seem to be having a moment, at least in my neck of the woods. I hope this was helpful, and next time I review an SBOM I can just do a quick pass and move on with my life."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-08-18T15:05:50.668556-05:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-08-18T15:05:50.668556-05:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Some notes about SBOMs"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "b0df5100-0bf9-0d00-8eb5-f67907e4c7cd"
	}
}