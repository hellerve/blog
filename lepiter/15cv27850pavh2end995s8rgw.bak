{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:37:02.809812+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:46:05.590671+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "h2NK18L3DQCBh/azCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I’ve been writing a lot of Python code that does string templating lately. Historically, I’ve been using `format` or [Mustache](https://mustache.github.io/) for that, but in the last few years, f-strings have increasingly become my simple templating engine of choice, especially for shorter templates or those that need embedded logic. I still have to use `jinja2` a whole lot in other contexts, and `string.Template` also exists, but neither sparks joy in me, so I reach for f-strings whenever I can."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:39:27.989625+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:46:37.596132+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "L1P45sL3DQCIc0eXCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now, the issue with f-strings is that they are *immediate*. They evaluate in place. Why is this sometimes a problem? Occasionally, I want to define a template now and fill it in later:"
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:41:18.916541+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:44:27.38573+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "XO6U7cL3DQCPgb45CqRnEw=="
				},
				"code" : "my_template = f\"\"\"{name.capitalize()}:\r\r{description}\r\"\"\"\r\r# somewhere else entirely in my code\rmy_template.format(\r\tname=\"entity\",\r\tdescription=\"description of my entity\"\r)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:43:01.632035+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:46:54.163142+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Jj+088L3DQCS2PRzCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I could _almost_  do this with trusty old `str.format`, but then I lose the ability to embed logic directly in the template. Of course, this is rarely an issue, and has a simple solution: put it in a function."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:45:19.490062+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:45:19.889276+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "j8fr+8L3DQCZOaQrCqRnEw=="
				},
				"code" : "def my_template(name, description):\r\treturn f\"\"\"{name.capitalize()}:\r\r{description}\r\"\"\"\r\r# somewhere else entirely in my code\rmy_template(\"entity\", \"description of my entity\")"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:45:33.599445+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:45:33.603999+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "CoMt/ML3DQCZQ5CvCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "But where’s the fun in that? Let’s do something unnecessary and complex instead. It’ll blow up in production and give you the perfect excuse to earn some on-call bucks."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:46:40.513025+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:46:45.315077+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dRvAAMP3DQCcGA3JCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Building an object"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:46:47.46149+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:43:46.88224+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dCEqAcP3DQCchdogCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So what we are going to do is create an object we can call `format` on as expected. We want something that behaves like f-strings and `str.format` simultaneously, evaluated on-demand with variable bindings, but still supporting logic. Let’s call it `Fstr`."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:47:40.054492+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:49:20.309237+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Q6RMBMP3DQCgBEGGCqRnEw=="
				},
				"code" : "class Fstr:\r\tdef __init__(self, string):\r\t\tself.string = string\r\t\t\r\tdef format(self, **kwargs):\r\t\t# TODO: what do we do here?\r\t\tpass\r\t\t\rmy_template = Fstr(\"\"\"{name.capitalize()}:\r\r{description}\r\"\"\")\r\r# somewhere else entirely in my code\rmy_template.format(\r\tname=\"entity\",\r\tdescription=\"description of my entity\"\r)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:49:30.999153+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:47:14.241738+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cYbpCsP3DQCjofmSCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So far, so unimpressive. But what do we do now? As always, the answer is to use `eval`! It’s dangerous, slow, and therefore perfect."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:50:05.121669+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:50:36.00966+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UC/yDMP3DQCldXbvCqRnEw=="
				},
				"code" : "class Fstr:\r\tdef __init__(self, string):\r\t\tself.string = string\r\t\t\r\tdef format(self, **kwargs):\r\t\texpr = f\"f'''{self.string}'''\"\n\t\treturn eval(expr, {}, kwargs)\r\t\t\rmy_template = Fstr(\"\"\"{name.capitalize()}:\r\r{description}\r\"\"\")\r\r# somewhere else entirely in my code\rmy_template.format(\r\tname=\"entity\",\r\tdescription=\"description of my entity\"\r)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T14:50:54.422225+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:42:14.106994+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "j3TiD8P3DQCmZfKECqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So what’s actually happening here? What does `f\"f'''{self.string}'''\"` mean? Naturally, we are turning a regular string into an f-string literal using an f-string!"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:30:50.990948+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:31:20.039496+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dzK7nsP3DQCqzdnGCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In case that explanation didn’t help, let’s visualize what this expands to."
			},
			{
				"__type" : "pythonSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:31:27.085301+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:32:30.249155+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6PLhoMP3DQCtQ35JCqRnEw=="
				},
				"code" : "# the input\rstring = \"\"\"{name.capitalize()}:\r\r{description}\r\"\"\"\r\r# the f-string\rf\"f'''{string}'''\"\r\r# the output\rf'''{name.capitalize()}:\r\r{description}\r'''"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:32:44.29125+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:42:02.70117+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KInepMP3DQCvNsDMCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So now we have an appropriate string literal. All we need to do to close the loop is `eval` it and give that evaluation the appropriate bindings. Luckily, the bindings already got passed into the function in the appropriate format (keyword argument handling did it for us), and we can just pass them into `eval` as is!"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:34:15.098503+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:34:42.223124+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "45/lqsP3DQC3PJP6CqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## That’s all, folks!"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:34:44.602871+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:35:41.463143+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5s2nrMP3DQC3qR/jCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I hope you enjoyed this slight return into weird meta-programming territory. It was a bit more tame than long-time readers of my blog might be used to, but I came across it and got really excited to share it, so I did."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:36:19.337528+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-08-02T15:36:23.916881+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0X43sMP3DQC8A3utCqRnEw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "See you around!"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-08-02T14:36:23.417444+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-08-02T14:36:23.417444+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "News from The Ministry of Bad Ideas, or: Delayed F-Strings"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "10dd49d7-c2f7-0d00-8186-fc960aa46713"
	}
}